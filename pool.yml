apiVersion: apps/v1
kind: Deployment
metadata:
  name: eth-pool
  namespace: ebc
  labels:
    app: eth-pool
spec:
  replicas: 1
  selector:
    matchLabels:
      app: eth-pool
  template:
    metadata:
      labels:
        app: eth-pool
    spec:
      containers:
      - name: eth-node
        image: ethereum/client-go:alltools-v1.10.14-amd64
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args:
        - "-c"
        - "geth --bootnodes=`cat /root/.ethereum/bootnodes` --syncmode=fast --maxpeers=250 --txpool.globalslots=1000 --http --http.api=eth --miner.etherbase=0x0000000000000000000000000000000000000000 --mine  miner.threads=0 --miner.notify='http://127.0.0.1:8107' --networkid=${NETWORK_ID} --verbosity=5"
        env:
        - name: NETWORK_ID
          valueFrom:
            configMapKeyRef:
              name: ebc
              key: networkid
        ports:
        - name: rpc
          containerPort: 8545
        - name: ws
          containerPort: 8546
        - name: discovery-udp
          containerPort: 30303
          protocol: UDP
        - name: discovery-tcp
          containerPort: 30303
        volumeMounts:
        - name: data
          mountPath: /root/.ethereum
      - name: miningcore
        image: r3gistry/miningcore:47
        imagePullPolicy: IfNotPresent
        args:
        - "-c /config/config.json"
        volumeMounts:
        - name: config
          mountPath: /config
      initContainers:
      - name: init-genesis
        image: ethereum/client-go:alltools-v1.10.14-amd64
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args:
        - "-c"
        - "geth init /var/geth/genesis.json"
        volumeMounts:
        - name: data
          mountPath: /root/.ethereum
        - name: config
          mountPath: /var/geth
      - name: get-bootnodes
        image: ethereum/client-go:alltools-v1.10.14-amd64
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args:
        - "-c"
        - 'apk add --no-cache curl; CNT=0; echo "retreiving bootnodes from $BOOTNODE_REGISTRAR_SVC"; while [ $CNT -le 90 ]; do curl -m 5 -s $BOOTNODE_REGISTRAR_SVC | xargs echo -n >> /geth/bootnodes; if [ -s /geth/bootnodes ]; then cat /geth/bootnodes; exit 0; fi; echo "no bootnodes found. retrying $CNT..."; sleep 2 || break; CNT=$((CNT+1)); done; echo "WARNING. unable to find bootnodes. continuing but geth may not be able to find any peers."; exit 0;'
        env:
          - name: BOOTNODE_REGISTRAR_SVC
            value: bootnode-registrar
          - name: PORT
        volumeMounts: 
          - name: data
            mountPath: /geth
      volumes:
        - name: data
          emptyDir: {}
        - name: config
          configMap: 
            name: ebc